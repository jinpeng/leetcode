/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package addtwonumbers;

import org.junit.Test;
import static org.junit.Assert.*;

public class SolutionTest {
    private boolean isEqual(ListNode l1, ListNode l2) {
        ListNode left = l1;
        ListNode right = l2;
        while (left != null && right != null) {
            if (left.val != right.val) {
                return false;
            }
            left = left.next;
            right = right.next;
        }
        if (left != null || right != null) {
            return false;
        }
        return true;
    }

    @Test public void testSameLength() {
        Solution classUnderTest = new Solution();

        ListNode l1 = new ListNode(2);
        l1.next = new ListNode(4);
        l1.next.next = new ListNode(3);

        ListNode l2 = new ListNode(5);
        l2.next = new ListNode(6);
        l2.next.next = new ListNode(4);

        ListNode expected = new ListNode(7);
        expected.next = new ListNode(0);
        expected.next.next = new ListNode(8);
        assertTrue("", isEqual(expected, classUnderTest.addTwoNumbers(l1, l2)));
    }

    @Test public void testSameLengthAndCarry() {
        Solution classUnderTest = new Solution();

        ListNode l1 = new ListNode(5);
        ListNode l2 = new ListNode(5);
        ListNode expected = new ListNode(0);
        expected.next = new ListNode(1);
        assertTrue("", isEqual(expected, classUnderTest.addTwoNumbers(l1, l2)));
    }

    @Test public void testDifferentLength() {
        Solution classUnderTest = new Solution();

        ListNode l1 = new ListNode(1);
        ListNode l2 = new ListNode(9);
        l2.next = new ListNode(9);
        ListNode expected = new ListNode(0);
        expected.next = new ListNode(0);
        expected.next.next = new ListNode(1);
        assertTrue("", isEqual(expected, classUnderTest.addTwoNumbers(l1, l2)));
    }
}
